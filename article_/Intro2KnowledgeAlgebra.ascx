<%@ Control Language="C#" AutoEventWireup="true" %>
<%@ Register Src="~/article_/_algebra_/fig_/Ux.ascx" TagPrefix="uc1" TagName="Ux" %>
<%@ Register Src="~/article_/_algebra_/fig_/Kens.ascx" TagPrefix="uc1" TagName="Kens" %>
<%@ Register Src="~/article_/_algebra_/Web4weixin.ascx" TagPrefix="uc1" TagName="Web4weixin" %>




<section>
<uc1:Web4weixin runat="server" ID="Web4weixin" />
	<p>零空零空告诉我，接下来我该学什么？</p>

	<h1>零空知识代数，为科教而算。
	</h1>
	<p>
		有天博士
	</p>
	
	<p>
		知识图谱被一些搜索引擎用于改善搜索结果，使得其根据你的输入，来给出相关的结果，即使这些结果不含有你输入的字词。而有时，用户会惊讶的发现这些结果相关性相当高正是自己想要的结果。
	</p>
	<p>
		零空的科技工作者也在做类似的研发。人类的知识积累到今天，已经非常庞大而又细微。说其庞杂是因为其包罗万象，说其细微是看每个细节似乎都还可以无限细分下去。有时我们在知识的海洋的徜徉，难免会迷路。零空系统在探索如何更好的划分知识领域而又保持它们间的联系，我们在零空把这块工作称之为知识代数(Knowledge Algebra)，它是人们常说的知识计算的一部分。（我们将其称为知识代数而非知识图谱还在于我们觉得最终可能还是得依靠抽象的代数方法，而非具象的几何方法来让其功能展现更充分）
	</p>
	<p>
		在几年前的一次教学交流会上，我就自己手头的工作做过一次报告（<a href="http://nilnul.com/app_/nilnul._ken_.present.reveal/_demo/present/headed/IeShiv_walls.aspx">这是那次报告的讲稿，大屏下看尤佳，小屏幕看似乎也凑合</a>），里面大致说明了一下我们的规划。
	</p>
	<p>
		我们的做法是把知识的关系公理化，对知识领域可以将其不断划分为更小的模块，直到我们觉得其复杂度降低到我们能够有能力认识之为止（我们就是不断把稍复杂的不断分解到我们能做的，如此开发系统的）。
		比如我们把知识分成了如下领域：
	</p>
	<div>
		<uc1:Kens runat="server" ID="Kens" />

	</div>
	<p>
		然后人们可以在其中圈定自己已经掌握了哪些知识。教育者也可以把一些测试题目和知识领域关联起来，从而可以测试学习者掌握了哪些内容。零空试验间里就有这样的在研系统（我们称之为零空问答），比如：这里就是根据知识领域给出的自测题。
	</p>
	<p>http://nilnul.com/app_/nilnul._ask_/eg_/opn/ans/assesses_/shuffled/kensFroQuery/P.aspx?kens=[40035,40032,40031,40030,19,18,17,11]</p>
	<p>
		注意链接里的参数[40035,40032,40031,40030,19,18,17,11]中的每个数字都对应着上表里的某个知识领域。</p>
	<p><a href="http://nilnul.com/app_/nilnul._ask_/eg_/opn/ans/assesses_/shuffled/kensFroQuery/P.aspx?kens=[40035,40032,40031,40030,19,18,17,11]">点击这里自己试一下吧</a></p>
	<p>
		我们可以修改这个列表，从而选择不同知识领域的题目。比如我这里改其为：</p>
	<p>
		http://nilnul.com/app_/nilnul._ask_/eg_/opn/ans/assesses_/shuffled/kensFroQuery/P.aspx?kens=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,10023,10024,10025,10026,10027,10028,20025,40025,40026,40027,40028,40029,40030,40031,40032,40033,40034,40035]
	</p>
	<p>
		也就是我们目前试验库里的所有领域现有的一些题目。</p>
	<p>
		<a href="http://nilnul.com/app_/nilnul._ask_/eg_/opn/ans/assesses_/shuffled/kensFroQuery/P.aspx?kens=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,10023,10024,10025,10026,10027,10028,20025,40025,40026,40027,40028,40029,40030,40031,40032,40033,40034,40035]">不妨点击这里测一下吧。</a></p>
	<p>
		我们这套系统可以用于学习者自测或者教育者出卷。不过这套系统目前还是在实验室阶段，它犹如一个没有引擎盖和挡风玻璃也没有方向盘（需要驾驶者自带扳手）的汽车，只有开发者才有信心驾驶。因此，虽然有老师来了解，但我们这个还没有界面来包装，可能还不断有运行时错误，所以很难投入实际操作环境使用。但我们可以提供所有的源代码和数据，如果有兴趣的，可以到开源网站或找我们索取。当然，我们的长远目标还是将其逐渐从试验室培育出来，投入到丛林中去生存；只是目前人手非常有限，尚有别的工程排期，而不能尽早实现。
	</p>
	<p>
		知识代数这样就可以让用户知道自己已经掌握了哪些知识领域（由于知识领域可以无限细分，所以不要担心对某个领域只掌握半拉的情况；如果只掌握半拉，那就把没掌握的去掉；这是由代数运算的封闭性来保证的）。然后用户设定学习目标后，用知识代数就可以计算预期和现实的差距，给出学习路径。进一步地，知识代数还可以协助我们进行专业设置或者课程设置，理清课程的先后关系和内容是否重复，做到不重不漏不多不少，前后紧凑。从而大大提高学习效率。我们乐观估计，在这种高效学习下，我们可以把学习效率提高3-5倍以上，换言之，原来需要10年的学习，现在只需要2年就够了。
	</p>
	<p>
		零空系统有处于不同阶段的研发产品，欢迎大家体验了解。以下是个微信群号，有兴趣的可以加入和我们一线人员直接沟通，了解我们的产品甚至是实验室里的半成品工程；有空我也会继续介绍有些我们认为还是挺有意思的试验品。
	</p>
	<div>
		<uc1:Ux runat="server" ID="Ux" />
	</div>

</section>
